{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Container/Container.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/ContactListItem/ContactListItem.js","Components/Filter/Filter.js","App.js","index.js","Components/Container/Container.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","formButton","type","pattern","title","required","onChange","Component","ContactList","ContactListItem","item","onDelete","id","onClick","Filter","App","contacts","filter","formSubmitHandler","contact","shortid","generate","find","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteItem","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","list","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f34280.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"ContactForm_formButton__2z9-a\"};","import s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { Component } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.name, this.state.number);\n\n    this.setState({ name: \"\" });\n    this.setState({ number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.formButton}>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleChange}\n          value={this.state.name}\n        />\n\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n          value={this.state.number}\n        />\n\n        <button name=\"\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nexport default class ContactList extends Component {\n  render() {\n    return <ul>{this.props.children}</ul>;\n  }\n}\n\n// function ContactList({ list }) {\n//   return (\n//     <ul className=\"friend-list\">\n//       {list.map((item) => (\n//         <li key={item.id}>{item.name}</li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// export default ContactList;\n","import { Component } from \"react\";\nexport default class ContactListItem extends Component {\n  render() {\n    const { item, onDelete, id } = this.props;\n\n    return (\n      <li>\n        {item.name}:{item.number}\n        <button onClick={() => onDelete(id)}>Delete</button>\n      </li>\n    );\n  }\n}\n","const Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <br></br>\n    <input type=\"text\" value={value} onChange={onChange}></input>\n  </label>\n);\n\nexport default Filter;\n","import { Component } from \"react\";\nimport Container from \"./Components/Container/Container\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport ContactListItem from \"./Components/ContactListItem/ContactListItem\";\nimport Filter from \"./Components/Filter/Filter\";\nimport shortid from \"shortid\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    // console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n\n    // if (nextContacts.length > prevContacts.length && prevContacts.length !== 0) {\n    //   this.toggleModal();\n    // }\n  }\n\n  formSubmitHandler = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteItem = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList list={visibleContacts} onDelete={this.deleteItem}>\n          {visibleContacts.map((item) => (\n            <ContactListItem\n              item={item}\n              key={item.id}\n              onDelete={this.deleteItem}\n              id={item.id}\n            />\n          ))}\n        </ContactList>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1gw4E\"};"],"sourceRoot":""}